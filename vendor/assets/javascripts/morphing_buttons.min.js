/*!
 * classie - class helper functions
 * from bonzo https://github.com/ded/bonzo
 *
 * classie.has( elem, 'my-class' ) -> true/false
 * classie.add( elem, 'my-new-class' )
 * classie.remove( elem, 'my-unwanted-class' )
 * classie.toggle( elem, 'my-class' )
 */

/*jshint browser: true, strict: true, undef: true */
/*global define: false */

( function( window ) {

'use strict';

// class helper functions from bonzo https://github.com/ded/bonzo

function classReg( className ) {
  return new RegExp("(^|\\s+)" + className + "(\\s+|$)");
}

// classList support for class management
// altho to be fair, the api sucks because it won't accept multiple classes at once
var hasClass, addClass, removeClass;

if ( 'classList' in document.documentElement ) {
  hasClass = function( elem, c ) {
    return elem.classList.contains( c );
  };
  addClass = function( elem, c ) {
    elem.classList.add( c );
  };
  removeClass = function( elem, c ) {
    elem.classList.remove( c );
  };
}
else {
  hasClass = function( elem, c ) {
    return classReg( c ).test( elem.className );
  };
  addClass = function( elem, c ) {
    if ( !hasClass( elem, c ) ) {
      elem.className = elem.className + ' ' + c;
    }
  };
  removeClass = function( elem, c ) {
    elem.className = elem.className.replace( classReg( c ), ' ' );
  };
}

function toggleClass( elem, c ) {
  var fn = hasClass( elem, c ) ? removeClass : addClass;
  fn( elem, c );
}

var classie = {
  // full names
  hasClass: hasClass,
  addClass: addClass,
  removeClass: removeClass,
  toggleClass: toggleClass,
  // short names
  has: hasClass,
  add: addClass,
  remove: removeClass,
  toggle: toggleClass
};

// transport
if ( typeof define === 'function' && define.amd ) {
  // AMD
  define( classie );
} else {
  // browser global
  window.classie = classie;
}

})( window );


(function(e){"use strict";function i(e,t){for(var n in t){if(t.hasOwnProperty(n)){e[n]=t[n]}}return e}function s(e,t){this.el=e;this.options=i({},this.options);i(this.options,t);this._init()}var t={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd",msTransition:"MSTransitionEnd",transition:"transitionend"},n=t[Modernizr.prefixed("transition")],r={transitions:Modernizr.csstransitions};s.prototype.options={closeEl:"",onBeforeOpen:function(){return false},onAfterOpen:function(){return false},onBeforeClose:function(){return false},onAfterClose:function(){return false}};s.prototype._init=function(){this.button=this.el.querySelector("button");this.expanded=false;this.contentEl=this.el.querySelector(".morph-content");this._initEvents()};s.prototype._initEvents=function(){var e=this;this.button.addEventListener("click",function(){e.toggle()});if(this.options.closeEl!==""){var t=this.el.querySelector(this.options.closeEl);if(t){t.addEventListener("click",function(){e.toggle()})}}};s.prototype.toggle=function(){if(this.isAnimating)return false;if(this.expanded){this.options.onBeforeClose()}else{classie.addClass(this.el,"active");this.options.onBeforeOpen()}this.isAnimating=true;var e=this,t=function(i){if(i.target!==this)return false;if(r.transitions){if(e.expanded&&i.propertyName!=="opacity"||!e.expanded&&i.propertyName!=="width"&&i.propertyName!=="height"&&i.propertyName!=="left"&&i.propertyName!=="top"){return false}this.removeEventListener(n,t)}e.isAnimating=false;if(e.expanded){classie.removeClass(e.el,"active");e.options.onAfterClose()}else{e.options.onAfterOpen()}e.expanded=!e.expanded};if(r.transitions){this.contentEl.addEventListener(n,t)}else{t()}var i=this.button.getBoundingClientRect();classie.addClass(this.contentEl,"no-transition");this.contentEl.style.left="auto";this.contentEl.style.top="auto";setTimeout(function(){e.contentEl.style.left=i.left+"px";e.contentEl.style.top=i.top+"px";if(e.expanded){classie.removeClass(e.contentEl,"no-transition");classie.removeClass(e.el,"open")}else{setTimeout(function(){classie.removeClass(e.contentEl,"no-transition");classie.addClass(e.el,"open")},25)}},25)};e.UIMorphingButton=s})(window)
